name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        if npm ci; then
          echo "npm ci succeeded"
        else
          echo "npm ci failed, running npm install to fix lock file"
          npm install
        fi

    - name: Build project
      run: npm run build

    - name: Run tests
      run: npm test

    - name: Run tests with coverage
      run: npm run test:coverage
      if: matrix.node-version == '20.x'

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  e2e:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        if npm ci; then
          echo "npm ci succeeded"
        else
          echo "npm ci failed, running npm install to fix lock file"
          npm install
        fi

    - name: Build project
      run: npm run build

    - name: Run E2E tests
      run: npm run test:e2e
      env:
        # Use mock API keys for E2E tests
        OPENAI_API_KEY: mock-openai-key
        GOOGLE_API_KEY: mock-google-key
        AZURE_API_KEY: mock-azure-key
        AZURE_ENDPOINT: https://mock.openai.azure.com/