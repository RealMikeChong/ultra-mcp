name: Release to NPM

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment: npm-publisher
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          if npm ci; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed, running npm install to fix lock file"
            npm install
          fi

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Generate version from commit
        id: version
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          NEW_VERSION="1.0.0-${TIMESTAMP}-${COMMIT_HASH}"
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "Generated version: ${NEW_VERSION}"

      - name: Update package.json version
        run: |
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Publish to NPM
        run: npm publish --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            Auto-release for commit ${{ github.sha }}
            
            Install with: `npx ultra-mcp@${{ steps.version.outputs.version }}`
          draft: false
          prerelease: true
          generate_release_notes: true 